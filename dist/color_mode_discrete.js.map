{"version":3,"sources":["../src/color_mode_discrete.ts"],"names":["ColorModeDiscrete","scope","panelCtrl","ctrl","panel","values","thresholds","color","tooltips","i","length","j","value","push","tooltip","console","log","notMatched","getMatchedThreshold","threshold","index","getThreshold","isAllValuesNulls","getDiscreteColor","cardsData","noColorDefined","cards","nullPointMode","k","interval"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {StatusHeatmapCtrl} from \"./status_heatmap_ctrl\";\n\ninterface Tooltip {\n  tooltip: string;\n  color: string;\n}\n\ndeclare class DiscreteColorThreshold {\n  color: string;\n  value: number;\n  tooltip: string;\n}\n\n// Helper methods to handle discrete color mode\nexport class ColorModeDiscrete {\n  scope: any;\n  panelCtrl: StatusHeatmapCtrl;\n  panel: any;\n\n  constructor(scope) {\n    this.scope = scope;\n    this.panelCtrl = scope.ctrl;\n    this.panel = scope.ctrl.panel;\n  }\n\n  // get tooltip for each value ordered by thresholds priority\n  convertValuesToTooltips(values:any[]) : Tooltip[] {\n    let thresholds = this.panel.color.thresholds;\n    let tooltips:Tooltip[] = [];\n\n    for (let i = 0; i < thresholds.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        if (values[j] == thresholds[i].value) {\n          tooltips.push({\n            \"tooltip\": thresholds[i].tooltip?thresholds[i].tooltip:values[j],\n            \"color\": thresholds[i].color\n          });\n        }\n      }\n    }\n    return tooltips;\n  }\n\n  convertValueToTooltips(values) {\n    let thresholds = this.panel.color.thresholds;\n    let tooltips = [];\n\n    console.log(thresholds);\n\n    for (let i = 0; i < thresholds.length; i++) {\n      //for (let j = 0; j < values.length; j++) {\n        if (values == thresholds[i].value) {\n          console.log('ENTRAAAAA')\n          console.log(values);\n          console.log(thresholds[i].value);\n          tooltips.push({\n            \"tooltip\": thresholds[i].tooltip?thresholds[i].tooltip:values,\n            \"color\": thresholds[i].color\n          });\n        //}\n      }\n    }\n    return tooltips;\n  }\n\n  getNotMatchedValues(values:any[]) {\n    let notMatched:any[] = [];\n    for (let j = 0; j < values.length; j++) {\n      if (!this.getMatchedThreshold(values[j])) {\n        notMatched.push(values[j]);\n      }\n    }\n    return notMatched;\n  }\n\n  getNotColoredValues(values:any[]) {\n    let notMatched:any[] = [];\n    for (let j = 0; j < values.length; j++) {\n      let threshold = this.getMatchedThreshold(values[j]);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        notMatched.push(values[j]);\n      }\n    }\n    return notMatched;\n  }\n\n  getDiscreteColor(index) {\n    let color = this.getThreshold(index).color;\n    if (!color || color == \"\") {\n      return 'rgba(0,0,0,1)';\n    }\n    return color;\n  }\n\n  getBucketColorSingle(value) {\n    let thresholds = this.panel.color.thresholds;\n    if (value == null) {\n      // treat as null value\n      return 'rgba(0,0,0,1)';\n      //return this.getMatchedThreshold(null).color;\n    }\n      let threshold = this.getMatchedThreshold(value);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        return 'rgba(0,0,0,1)';\n      } else {\n        return threshold.color;\n      }\n  }\n\n  // returns color from first matched thresold in order from 0 to thresholds.length\n  getBucketColor(values) {\n    let thresholds = this.panel.color.thresholds;\n\n    if (!values || values.length == 0) {\n      // treat as null value\n      return this.getMatchedThreshold(null).color;\n    }\n\n    if (values.length == 1) {\n      let threshold = this.getMatchedThreshold(values[0]);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        return 'rgba(0,0,0,1)';\n      } else {\n        return threshold.color;\n      }\n    }\n\n    let isAllValuesNulls = true;\n    for (let j = 0; j < values.length; j++) {\n      if (values[j] != null) {\n        isAllValuesNulls = false;\n      }\n    }\n    if (isAllValuesNulls) {\n      return this.getMatchedThreshold(null).color;\n    }\n\n    for (let i = 0; i < thresholds.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        if (values[j] == thresholds[i].value) {\n          return this.getDiscreteColor(i);\n        }\n      }\n    }\n    return 'rgba(0,0,0,1)';\n  }\n\n\n  updateCardsValuesHasColorInfoSingle() {\n    if (!this.panelCtrl.cardsData) {\n      return;\n    }\n    this.panelCtrl.cardsData.noColorDefined = false;\n    var cards = this.panelCtrl.cardsData.cards;\n    for (var i = 0; i < cards.length; i++) {\n      cards[i].noColorDefined = false;\n      var values = cards[i].value;\n      var threshold = this.getMatchedThreshold(values);\n      console.log(threshold);\n      if (!threshold || !threshold.color || threshold.color == \"\") {\n        cards[i].noColorDefined = true;\n        this.panelCtrl.cardsData.noColorDefined = true;\n        break;\n      }\n    }\n  }\n\n  updateCardsValuesHasColorInfo() {\n    if (!this.panelCtrl.cardsData) {\n      return\n    }\n    this.panelCtrl.cardsData.noColorDefined = false;\n    let cards = this.panelCtrl.cardsData.cards;\n    for (let i=0; i<cards.length; i++) {\n      cards[i].noColorDefined = false;\n      let values = cards[i].values;\n      for (let j=0; j<values.length; j++) {\n        let threshold = this.getMatchedThreshold(values[j]);\n        if (!threshold || !threshold.color || threshold.color == \"\") {\n          cards[i].noColorDefined = true;\n          this.panelCtrl.cardsData.noColorDefined = true;\n          break;\n        }\n      }\n    }\n  }\n\n  getMatchedThreshold(value) {\n    if (value == null) {\n      if (this.panel.nullPointMode == 'as empty') {\n        // FIXME: make this explicit for user\n        // Right now this color never used because null as empty handles in getCardOpacity method.\n        return {\n          \"color\": \"rgba(0,0,0,0)\",\n          \"value\": \"null\",\n          \"tooltip\": \"null\",\n        }\n      } else {\n        value = 0;\n      }\n    }\n\n    let thresholds = this.panel.color.thresholds;\n    for (let k = 0; k < thresholds.length; k++) {\n      if (value == thresholds[k].value) {\n        return thresholds[k];\n      }\n    }\n    return null;\n  }\n\n  getThreshold(index) {\n    let thresholds = this.panel.color.thresholds;\n    if (index < 0 || index >= thresholds.length == null) {\n      return {\n        \"color\": \"rgba(0,0,0,0)\",\n        \"value\": \"null\",\n        \"tooltip\": \"null\",\n      }\n    }\n    return thresholds[index];\n  }\n\n  roundIntervalCeil(interval) {\n    switch (true) {\n      case interval <= 10:\n        return 10; // 0.01s\n      case interval <= 20:\n        return 20; // 0.02s\n      case interval <= 50:\n        return 50; // 0.05s\n      case interval <= 100:\n        return 100; // 0.1s\n      case interval <= 200:\n        return 200; // 0.2s\n      case interval <= 500:\n        return 500; // 0.5s\n      case interval <= 1000:\n        return 1000; // 1s\n      case interval <= 2000:\n        return 2000; // 2s\n      case interval <= 5000:\n        return 5000; // 5s\n      case interval <= 10000:\n        return 10000; // 10s\n      case interval <= 15000:\n        return 15000; // 15s\n      case interval <= 20000:\n        return 20000; // 20s\n      case interval <= 30000:\n        return 30000; // 30s\n      case interval <= 60000:\n        return 60000; // 1m\n      case interval <= 120000:\n        return 120000; // 2m\n      case interval <= 300000:\n        return 300000; // 5m\n      case interval <= 600000:\n        return 600000; // 10m\n      case interval <= 900000:\n        return 900000; // 15m\n      case interval <= 1200000:\n        return 1200000; // 20m\n      case interval <= 1800000:\n        return 1800000; // 30m\n      case interval <= 3600000:\n        return 3600000; // 1h\n      case interval <= 7200000:\n        return 7200000; // 2h\n      case interval <= 10800000:\n        return 10800000; // 3h\n      case interval <= 21600000:\n        return 21600000; // 6h\n      case interval <= 43200000:\n        return 43200000; // 12h\n      case interval <= 86400000:\n        return 86400000; // 1d\n      case interval <= 604800000:\n        return 604800000; // 1w\n      case interval <= 2592000000:\n        return 2592000000; // 30d\n      default:\n        return 31536000000; // 1y\n    }\n  }\n}\n"],"file":"color_mode_discrete.js"}