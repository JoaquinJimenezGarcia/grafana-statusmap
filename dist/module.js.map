<<<<<<< HEAD
{"version":3,"sources":["../src/module.ts"],"names":["_","kbn","loadPluginCss","MetricsPanelCtrl","Card","rendering","statusHeatmapOptionsEditor","ColorModeDiscrete","HelperFormat","HelperFormatValue","CANVAS","SVG","VALUE_INDEX","TIME_INDEX","renderer","colorSchemes","name","value","invert","colorModes","opacityScales","dark","light","StatusHeatmapCtrl","$scope","$injector","timeSrv","annotationsSrv","$window","datasourceSrv","variableSrv","templateSrv","datasource","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","nullPointMode","yAxisSort","highlightCards","useMax","urls","label","base_url","usehelper","useseriesname","forcelowercase","icon_fa","helper","index","seriesFilterIndex","usingUrl","paginationActivated","currentPage","pageSize","numberOfPages","lastValue","panel","push","render","splice","defaultsDeep","panelDefaults","helperFormats","renderLink","link","scopedVars","format","scoped","key","replace","graph","multipleValues","noColorDefined","discreteHelper","dataWarnings","title","tip","annotations","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","postRefresh","onRenderComplete","onChangeType","chartWidth","renderingCompleted","url","type","Date","Raw","wndWidth","$","window","width","panelWidthFactor","gridPos","w","panelWidth","Math","ceil","max","getChartWidth","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","roundIntervalCeil","lowLimitMs","intervalOverride","interval","slice","interval_to_ms","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","issueQueriesWithInterval","origInterval","res","dataList","cardsData","convertToCards","console","log","result","loading","length","addEditorTab","unitFormats","getUnitFormats","updateCardsValuesHasColorInfo","updateCardsValuesHasColorInfoSingle","newColor","scope","elem","attrs","ctrl","time","timeRangeForUrl","var_time","xBucketSize","yBucketSize","maxValue","minValue","targets","targetIndex","map","d","i","target","concat","toArray","keys","datapoints","j","card","id","values","columns","y","x","si","s","datapoint","min"],"mappings":"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","sourcesContent":["// Libraries\nimport _ from 'lodash';\nimport { auto } from 'angular';\n\n// Components\nimport './color_legend';\n\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\n// Types\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationsSrv } from 'app/features/annotations/annotations_srv';\nimport {CardsStorage, Card} from './statusmap_data';\nimport rendering from './rendering';\n// import aggregates, { aggregatesMap } from './aggregates';\n// import fragments, { fragmentsMap } from './fragments';\n// import { labelFormats } from './xAxisLabelFormats';\nimport {statusHeatmapOptionsEditor} from './options_editor';\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\nimport { HelperFormat } from './helper_format';\nimport { HelperFormatValue } from './helper_format_value';\n\nconst CANVAS = 'CANVAS';\nconst SVG = 'SVG';\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst renderer = CANVAS;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\ninterface DataWarning {\n  title: string;\n  tip: string;\n}\n\ninterface DataWarnings {\n  noColorDefined: DataWarning;\n  multipleValues: DataWarning;\n}\n\ninterface ColorThreshold {\n\n}\n\n\n\n\nloadPluginCss({\n  dark: 'plugins/flant-statusmap-panel/css/statusmap.dark.css',\n  light: 'plugins/flant-statusmap-panel/css/statusmap.light.css'\n});\n\nclass StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  unitFormats: any;\n  data: any;\n  cardsData: any;\n  graph: any;\n  multipleValues: boolean;\n  noColorDefined: boolean;\n  discreteHelper: ColorModeDiscrete;\n  dataWarnings: DataWarnings;\n  helperFormats: any = [];\n\n  annotations: object[] = [];\n  annotationsPromise: any;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // color mode\n    color: {\n      mode: 'spectrum',\n      cardColor: '#b4ff00',\n      colorScale: 'sqrt',\n      exponent: 0.5,\n      colorScheme: 'interpolateGnYlRd',\n      // discrete mode settings\n      defaultColor: '#757575',\n      thresholds: [] // manual colors\n    },\n    // buckets settings\n    cards: {\n      cardMinWidth: 5,\n      cardVSpacing: 2,\n      cardHSpacing: 2,\n      cardRound: null\n    },\n    xAxis: {\n      show: true,\n      showWeekends: true,\n      minBucketWidthToShowWeekends: 4,\n      showCrosshair: true,\n      labelFormat: '%a %m/%d'\n    },\n    yAxis: {\n      show: true,\n      showCrosshair: false\n    },\n    tooltip: {\n      show: true\n    },\n    legend: {\n      show: true\n    },\n    data: {\n      unitFormat: 'short',\n      decimals: null\n    },\n    // how null points should be handled\n    nullPointMode: 'as empty',\n    yAxisSort: 'metrics',\n    highlightCards: true,\n    useMax: true,\n    urls: [{\n      tooltip: '',\n      label: '',\n      base_url: '',\n      usehelper: false,\n      useseriesname: true,\n      forcelowercase: true,\n      icon_fa: 'external-link',\n      helper: {\n        index: -1\n      }\n    }],\n    seriesFilterIndex: -1,\n    usingUrl: false,\n    paginationActivated: false,\n\n    currentPage: 0,\n    pageSize: 5,\n    numberOfPages: 0,\n    lastValue: 0\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, timeSrv, private annotationsSrv: AnnotationsSrv, $window, datasourceSrv, variableSrv, templateSrv) {\n    super($scope, $injector);\n\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n    this.variableSrv = variableSrv;\n    this.helperFormats = HelperFormat;\n\n    this.renderLink = (link, scopedVars, format) => {\n      var scoped = {}\n      for (var key in scopedVars) {\n        scoped[key] = { value: scopedVars[key] }\n      }\n      if (format) {\n        return this.templateSrv.replace(link, scoped, format)\n      } else {\n        return this.templateSrv.replace(link, scoped)\n      }\n    }\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteHelper = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      \"noColorDefined\": {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      \"multipleValues\": {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      }\n    };\n\n    this.annotations = [];\n    this.annotationsSrv = annotationsSrv;\n    \n    this.timeSrv = timeSrv;\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    // custom event from rendering.js\n    this.events.on('render-complete', this.onRenderComplete.bind(this));\n    this.events.on('onChangeType', this.onChangeType.bind(this));\n  }\n\n  onRenderComplete(data):void {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  }\n\n  onChangeType(url): void {\n    switch (url.type) {\n      case HelperFormat.Date:\n        url.helper.format = HelperFormatValue.Date;\n        break;\n      case HelperFormat.Raw:\n        url.helper.format = HelperFormatValue.Raw;\n        break;\n      default:\n        url.helper.format = HelperFormatValue.Raw;\n        break;\n    }\n  }\n\n  getChartWidth():number {\n    const wndWidth = $(window).width();\n    // gripPos.w is a width in grid's measurements. Grid size in Grafana is 24.\n    const panelWidthFactor = this.panel.gridPos.w / 24;\n    const panelWidth = Math.ceil(wndWidth * panelWidthFactor);\n    // approximate chartWidth because y axis ticks not rendered yet on first data receive.\n    const chartWidth = _.max([\n      panelWidth - 200,\n      panelWidth/2\n    ]);\n\n    return chartWidth!;\n  }\n\n  // override calculateInterval for discrete color mode\n  calculateInterval() {\n    let chartWidth = this.getChartWidth();\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteHelper.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    \n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n    let interval = kbn.secondsToHms(intervalMs / 1000);\n\n    this.intervalMs = intervalMs;\n    this.interval = interval;\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have datasourcePromises. \n\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return this.issueQueriesWithInterval(datasource, this.interval);\n      });\n    } else {\n      return this.issueQueriesWithInterval(datasource, this.interval);\n    }\n  }\n\n  // Grafana 6.2 (and older) is using this.interval for queries,\n  // but Grafana 6.3+ is calculating interval again in queryRunner,\n  // so we need to save-restore this.panel.interval.\n  issueQueriesWithInterval(datasource: any, interval: any) {\n    var origInterval = this.panel.interval;\n    this.panel.interval = this.interval;\n    var res = super.issueQueries(datasource);\n    this.panel.interval = origInterval;\n    return res;\n  }\n\n\n  onDataReceived(dataList: any) {\n    this.data      = dataList;\n    this.cardsData = this.convertToCards(this.data);\n\n    console.log(\"OnDataReceived\");\n\n    this.annotationsPromise.then(\n      (result: { alertState: any; annotations: any }) => {\n        this.loading = false;\n        //this.alertState = result.alertState;\n        if (result.annotations && result.annotations.length > 0) {\n          this.annotations = result.annotations;\n        } else {\n          this.annotations = [];\n        }\n        console.log(\"annotationsPromise result \" + this.annotations.length + \" annotations\");\n        this.render();\n      },\n      () => {\n        this.loading = false;\n        this.annotations = [];\n        console.log(\"annotationsPromise onrejected\");\n        this.render();\n      }\n    );\n\n    this.panel.numberOfPages = Math.ceil(this.data.length/this.panel.pageSize);\n    console.log(this.panel.numberOfPages);\n\n    //this.render();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', statusHeatmapOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onRender() {\n    if (!this.range || !this.data) { return; }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.cardsData) {\n        this.multipleValues = this.cardsData.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      if (this.panel.seriesFilterIndex == -1) {\n        this.discreteHelper.updateCardsValuesHasColorInfo();\n      } else {\n        console.log(this.cardsData);\n        this.discreteHelper.updateCardsValuesHasColorInfoSingle();\n      }\n      if (this.cardsData) {\n        this.noColorDefined = this.cardsData.noColorDefined;\n      }\n    }\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  }\n\n  postRefresh() {\n    this.noColorDefined = false;\n  }\n\n  onEditorAddThreshold() {\n    this.panel.color.thresholds.push({ color: this.panel.defaultColor });\n    this.render();\n  }\n\n  onEditorAddUrl = () => {\n    this.panel.urls.push({\n      label: '',\n      base_url: '',\n      usehelper: false,\n      useseriesname: true,\n      forcelowercase: true,\n      icon_fa: 'external-link',\n      helper: {\n        index: -1\n      }\n    });\n    this.render();\n  }\n\n  onEditorRemoveUrl = (index) => {\n    this.panel.urls.splice(index, 1);\n    this.render();\n  }\n\n  onEditorRemoveThreshold(index:number) {\n    this.panel.color.thresholds.splice(index, 1);\n    this.render();\n  }\n\n  onEditorRemoveThresholds() {\n    this.panel.color.thresholds = [];\n    this.render();\n  }\n\n\n  onEditorRemoveUrls = () => {\n    this.panel.urls = [];\n    this.render();\n  }\n\n  onEditorAddThreeLights() {\n    this.panel.color.thresholds.push({color: \"red\", value: 2, tooltip: \"error\" });\n    this.panel.color.thresholds.push({color: \"yellow\", value: 1, tooltip: \"warning\" });\n    this.panel.color.thresholds.push({color: \"green\", value: 0, tooltip: \"ok\" });\n    this.render();\n  }\n  \n  /* https://ethanschoonover.com/solarized/ */\n  onEditorAddSolarized() {\n    this.panel.color.thresholds.push({color: \"#b58900\", value: 0, tooltip: \"yellow\" });\n    this.panel.color.thresholds.push({color: \"#cb4b16\", value: 1, tooltip: \"orange\" });\n    this.panel.color.thresholds.push({color: \"#dc322f\", value: 2, tooltip: \"red\" });\n    this.panel.color.thresholds.push({color: \"#d33682\", value: 3, tooltip: \"magenta\" });\n    this.panel.color.thresholds.push({color: \"#6c71c4\", value: 4, tooltip: \"violet\" });\n    this.panel.color.thresholds.push({color: \"#268bd2\", value: 5, tooltip: \"blue\" });\n    this.panel.color.thresholds.push({color: \"#2aa198\", value: 6, tooltip: \"cyan\" });\n    this.panel.color.thresholds.push({color: \"#859900\", value: 7, tooltip: \"green\" });\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  retrieveTimeVar() {\n    var time = this.timeSrv.timeRangeForUrl();\n    var var_time = '&from=' + time.from + '&to=' + time.to;\n    return var_time;\n  }\n\n  // group values into buckets by target\n  convertToCards(data) {\n  let cardsData = <CardsStorage> {\n      cards: [],\n      xBucketSize: 0,\n      yBucketSize: 0,\n      maxValue: 0,\n      minValue: 0,\n      multipleValues: false,\n      noColorDefined: false,\n      targets: [], // array of available unique targets\n      targetIndex: {} // indices in data array for each of available unique targets\n    };\n\n    if (!data || data.length == 0) { return cardsData;}\n\n    // Collect uniq timestamps from data and spread over targets and timestamps\n\n    // collect uniq targets and their indices\n    _.map(data, (d, i) => {\n      cardsData.targetIndex[d.target] = _.concat(_.toArray(cardsData.targetIndex[d.target]), i)\n    });\n\n    // TODO add some logic for targets heirarchy\n    cardsData.targets = _.keys(cardsData.targetIndex);\n    cardsData.yBucketSize = cardsData.targets.length;\n    // Maximum number of buckets over x axis\n    cardsData.xBucketSize = _.max(_.map(data, d => d.datapoints.length));\n\n    // Collect all values for each bucket from datapoints with similar target.\n    // TODO aggregate values into buckets over datapoint[TIME_INDEX] not over datapoint index (j).\n    for(let i = 0; i < cardsData.targets.length; i++) {\n      let target = cardsData.targets[i];\n\n      for (let j = 0; j < cardsData.xBucketSize; j++) {\n        let card = new Card();\n        card.id = i*cardsData.xBucketSize + j;\n        card.values = [];\n        card.columns = [];\n        card.multipleValues = false;\n        card.noColorDefined = false;\n        card.y = target;\n        card.x = -1;\n\n        // collect values from all timeseries with target\n        for (let si = 0; si < cardsData.targetIndex[target].length; si++) {\n          let s = data[cardsData.targetIndex[target][si]];\n          if (s.datapoints.length <= j) {\n            continue;\n          }\n          let datapoint = s.datapoints[j];\n          if (card.values.length === 0) {\n            card.x = datapoint[TIME_INDEX];\n          }\n          card.values.push(datapoint[VALUE_INDEX]);\n        }\n        card.minValue = _.min(card.values);\n        card.maxValue = _.max(card.values);\n        if (card.values.length > 1) {\n          cardsData.multipleValues = true;\n          card.multipleValues = true;\n          console.log('PEPITOOOOOOOOOO');\n          card.value = this.panel.seriesFilterIndex != -1 ? card.values[this.panel.seriesFilterIndex] : card.maxValue;\n        } else {\n          card.value = card.maxValue; // max value by default\n        }\n\n        if (cardsData.maxValue < card.maxValue)\n          cardsData.maxValue = card.maxValue;\n\n        if (cardsData.minValue > card.minValue)\n          cardsData.minValue = card.minValue;\n\n        if (card.x != -1) {\n        cardsData.cards.push(card);\n        }\n      }\n    }\n\n    return cardsData;\n  }\n}\n\nexport {\n  StatusHeatmapCtrl, StatusHeatmapCtrl as PanelCtrl\n};\n"],"file":"module.js"}
=======
{"version":3,"sources":["../src/module.ts"],"names":["_","kbn","loadPluginCss","MetricsPanelCtrl","Card","rendering","statusHeatmapOptionsEditor","ColorModeDiscrete","ExtraSeriesFormat","ExtraSeriesFormatValue","CANVAS","SVG","VALUE_INDEX","TIME_INDEX","renderer","colorSchemes","name","value","invert","colorModes","opacityScales","dark","light","StatusHeatmapCtrl","$scope","$injector","timeSrv","annotationsSrv","$window","datasourceSrv","variableSrv","templateSrv","datasource","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","nullPointMode","yAxisSort","highlightCards","useMax","urls","label","base_url","useExtraSeries","useseriesname","forcelowercase","icon_fa","extraSeries","index","seriesFilterIndex","usingUrl","panel","push","render","splice","defaultsDeep","panelDefaults","extraSeriesFormats","renderLink","link","scopedVars","format","scoped","key","replace","graph","multipleValues","noColorDefined","discreteExtraSeries","dataWarnings","title","tip","annotations","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","postRefresh","onRenderComplete","onChangeType","chartWidth","renderingCompleted","url","type","Date","Raw","wndWidth","$","window","width","panelWidthFactor","gridPos","w","panelWidth","Math","ceil","max","getChartWidth","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","roundIntervalCeil","lowLimitMs","intervalOverride","interval","slice","interval_to_ms","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","issueQueriesWithInterval","origInterval","res","dataList","cardsData","convertToCards","result","loading","length","addEditorTab","unitFormats","getUnitFormats","updateCardsValuesHasColorInfo","updateCardsValuesHasColorInfoSingle","newColor","scope","elem","attrs","ctrl","time","timeRangeForUrl","var_time","xBucketSize","yBucketSize","maxValue","minValue","targets","targetIndex","map","d","i","target","concat","toArray","keys","datapoints","j","card","id","values","columns","y","x","si","s","datapoint","min"],"mappings":"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","sourcesContent":["// Libraries\nimport _ from 'lodash';\nimport { auto } from 'angular';\n\n// Components\nimport './color_legend';\n\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\n// Types\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationsSrv } from 'app/features/annotations/annotations_srv';\nimport {CardsStorage, Card} from './statusmap_data';\nimport rendering from './rendering';\n// import aggregates, { aggregatesMap } from './aggregates';\n// import fragments, { fragmentsMap } from './fragments';\n// import { labelFormats } from './xAxisLabelFormats';\nimport {statusHeatmapOptionsEditor} from './options_editor';\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\nimport { ExtraSeriesFormat, ExtraSeriesFormatValue } from './extra_series_format';\n\nconst CANVAS = 'CANVAS';\nconst SVG = 'SVG';\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst renderer = CANVAS;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\ninterface DataWarning {\n  title: string;\n  tip: string;\n}\n\ninterface DataWarnings {\n  noColorDefined: DataWarning;\n  multipleValues: DataWarning;\n}\n\ninterface ColorThreshold {\n\n}\n\n\n\n\nloadPluginCss({\n  dark: 'plugins/flant-statusmap-panel/css/statusmap.dark.css',\n  light: 'plugins/flant-statusmap-panel/css/statusmap.light.css'\n});\n\nclass StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  unitFormats: any;\n  data: any;\n  cardsData: any;\n  graph: any;\n  multipleValues: boolean;\n  noColorDefined: boolean;\n  discreteExtraSeries: ColorModeDiscrete;\n  dataWarnings: DataWarnings;\n  extraSeriesFormats: any = [];\n\n  annotations: object[] = [];\n  annotationsPromise: any;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // color mode\n    color: {\n      mode: 'spectrum',\n      cardColor: '#b4ff00',\n      colorScale: 'sqrt',\n      exponent: 0.5,\n      colorScheme: 'interpolateGnYlRd',\n      // discrete mode settings\n      defaultColor: '#757575',\n      thresholds: [] // manual colors\n    },\n    // buckets settings\n    cards: {\n      cardMinWidth: 5,\n      cardVSpacing: 2,\n      cardHSpacing: 2,\n      cardRound: null\n    },\n    xAxis: {\n      show: true,\n      showWeekends: true,\n      minBucketWidthToShowWeekends: 4,\n      showCrosshair: true,\n      labelFormat: '%a %m/%d'\n    },\n    yAxis: {\n      show: true,\n      showCrosshair: false\n    },\n    tooltip: {\n      show: true\n    },\n    legend: {\n      show: true\n    },\n    data: {\n      unitFormat: 'short',\n      decimals: null\n    },\n    // how null points should be handled\n    nullPointMode: 'as empty',\n    yAxisSort: 'metrics',\n    highlightCards: true,\n    useMax: true,\n    urls: [{\n      tooltip: '',\n      label: '',\n      base_url: '',\n      useExtraSeries: false,\n      useseriesname: true,\n      forcelowercase: true,\n      icon_fa: 'external-link',\n      extraSeries: {\n        index: -1\n      }\n    }],\n    seriesFilterIndex: -1,\n    usingUrl: false\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, timeSrv, private annotationsSrv: AnnotationsSrv, $window, datasourceSrv, variableSrv, templateSrv) {\n    super($scope, $injector);\n\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n    this.variableSrv = variableSrv;\n    this.extraSeriesFormats = ExtraSeriesFormat;\n\n    this.renderLink = (link, scopedVars, format) => {\n      var scoped = {}\n      for (var key in scopedVars) {\n        scoped[key] = { value: scopedVars[key] }\n      }\n      if (format) {\n        return this.templateSrv.replace(link, scoped, format)\n      } else {\n        return this.templateSrv.replace(link, scoped)\n      }\n    }\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteExtraSeries = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      \"noColorDefined\": {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      \"multipleValues\": {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      }\n    };\n\n    this.annotations = [];\n    this.annotationsSrv = annotationsSrv;\n    \n    this.timeSrv = timeSrv;\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    // custom event from rendering.js\n    this.events.on('render-complete', this.onRenderComplete.bind(this));\n    this.events.on('onChangeType', this.onChangeType.bind(this));\n  }\n\n  onRenderComplete(data):void {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  }\n\n  onChangeType(url): void {\n    switch (url.type) {\n      case ExtraSeriesFormat.Date:\n        url.extraSeries.format = ExtraSeriesFormatValue.Date;\n        break;\n      case ExtraSeriesFormat.Raw:\n        url.extraSeries.format = ExtraSeriesFormatValue.Raw;\n        break;\n      default:\n        url.extraSeries.format = ExtraSeriesFormatValue.Raw;\n        break;\n    }\n  }\n\n  getChartWidth():number {\n    const wndWidth = $(window).width();\n    // gripPos.w is a width in grid's measurements. Grid size in Grafana is 24.\n    const panelWidthFactor = this.panel.gridPos.w / 24;\n    const panelWidth = Math.ceil(wndWidth * panelWidthFactor);\n    // approximate chartWidth because y axis ticks not rendered yet on first data receive.\n    const chartWidth = _.max([\n      panelWidth - 200,\n      panelWidth/2\n    ]);\n\n    return chartWidth!;\n  }\n\n  // override calculateInterval for discrete color mode\n  calculateInterval() {\n    let chartWidth = this.getChartWidth();\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteExtraSeries.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    \n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n    let interval = kbn.secondsToHms(intervalMs / 1000);\n\n    this.intervalMs = intervalMs;\n    this.interval = interval;\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have datasourcePromises. \n\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return this.issueQueriesWithInterval(datasource, this.interval);\n      });\n    } else {\n      return this.issueQueriesWithInterval(datasource, this.interval);\n    }\n  }\n\n  // Grafana 6.2 (and older) is using this.interval for queries,\n  // but Grafana 6.3+ is calculating interval again in queryRunner,\n  // so we need to save-restore this.panel.interval.\n  issueQueriesWithInterval(datasource: any, interval: any) {\n    var origInterval = this.panel.interval;\n    this.panel.interval = this.interval;\n    var res = super.issueQueries(datasource);\n    this.panel.interval = origInterval;\n    return res;\n  }\n\n\n  onDataReceived(dataList: any) {\n    this.data      = dataList;\n    this.cardsData = this.convertToCards(this.data);\n\n    this.annotationsPromise.then(\n      (result: { alertState: any; annotations: any }) => {\n        this.loading = false;\n        //this.alertState = result.alertState;\n        if (result.annotations && result.annotations.length > 0) {\n          this.annotations = result.annotations;\n        } else {\n          this.annotations = [];\n        }\n        this.render();\n      },\n      () => {\n        this.loading = false;\n        this.annotations = [];\n        this.render();\n      }\n    );\n\n    //this.render();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', statusHeatmapOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onRender() {\n    if (!this.range || !this.data) { return; }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.cardsData) {\n        this.multipleValues = this.cardsData.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      if (this.panel.seriesFilterIndex == -1) {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfo();\n      } else {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfoSingle();\n      }\n      if (this.cardsData) {\n        this.noColorDefined = this.cardsData.noColorDefined;\n      }\n    }\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  }\n\n  postRefresh() {\n    this.noColorDefined = false;\n  }\n\n  onEditorAddThreshold() {\n    this.panel.color.thresholds.push({ color: this.panel.defaultColor });\n    this.render();\n  }\n\n  onEditorAddUrl = () => {\n    this.panel.urls.push({\n      label: '',\n      base_url: '',\n      useExtraSeries: false,\n      useseriesname: true,\n      forcelowercase: true,\n      icon_fa: 'external-link',\n      extraSeries: {\n        index: -1\n      }\n    });\n    this.render();\n  }\n\n  onEditorRemoveUrl = (index) => {\n    this.panel.urls.splice(index, 1);\n    this.render();\n  }\n\n  onEditorRemoveThreshold(index:number) {\n    this.panel.color.thresholds.splice(index, 1);\n    this.render();\n  }\n\n  onEditorRemoveThresholds() {\n    this.panel.color.thresholds = [];\n    this.render();\n  }\n\n\n  onEditorRemoveUrls = () => {\n    this.panel.urls = [];\n    this.render();\n  }\n\n  onEditorAddThreeLights() {\n    this.panel.color.thresholds.push({color: \"red\", value: 2, tooltip: \"error\" });\n    this.panel.color.thresholds.push({color: \"yellow\", value: 1, tooltip: \"warning\" });\n    this.panel.color.thresholds.push({color: \"green\", value: 0, tooltip: \"ok\" });\n    this.render();\n  }\n  \n  /* https://ethanschoonover.com/solarized/ */\n  onEditorAddSolarized() {\n    this.panel.color.thresholds.push({color: \"#b58900\", value: 0, tooltip: \"yellow\" });\n    this.panel.color.thresholds.push({color: \"#cb4b16\", value: 1, tooltip: \"orange\" });\n    this.panel.color.thresholds.push({color: \"#dc322f\", value: 2, tooltip: \"red\" });\n    this.panel.color.thresholds.push({color: \"#d33682\", value: 3, tooltip: \"magenta\" });\n    this.panel.color.thresholds.push({color: \"#6c71c4\", value: 4, tooltip: \"violet\" });\n    this.panel.color.thresholds.push({color: \"#268bd2\", value: 5, tooltip: \"blue\" });\n    this.panel.color.thresholds.push({color: \"#2aa198\", value: 6, tooltip: \"cyan\" });\n    this.panel.color.thresholds.push({color: \"#859900\", value: 7, tooltip: \"green\" });\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  retrieveTimeVar() {\n    var time = this.timeSrv.timeRangeForUrl();\n    var var_time = '&from=' + time.from + '&to=' + time.to;\n    return var_time;\n  }\n\n  // group values into buckets by target\n  convertToCards(data) {\n  let cardsData = <CardsStorage> {\n      cards: [],\n      xBucketSize: 0,\n      yBucketSize: 0,\n      maxValue: 0,\n      minValue: 0,\n      multipleValues: false,\n      noColorDefined: false,\n      targets: [], // array of available unique targets\n      targetIndex: {} // indices in data array for each of available unique targets\n    };\n\n    if (!data || data.length == 0) { return cardsData;}\n\n    // Collect uniq timestamps from data and spread over targets and timestamps\n\n    // collect uniq targets and their indices\n    _.map(data, (d, i) => {\n      cardsData.targetIndex[d.target] = _.concat(_.toArray(cardsData.targetIndex[d.target]), i)\n    });\n\n    // TODO add some logic for targets heirarchy\n    cardsData.targets = _.keys(cardsData.targetIndex);\n    cardsData.yBucketSize = cardsData.targets.length;\n    // Maximum number of buckets over x axis\n    cardsData.xBucketSize = _.max(_.map(data, d => d.datapoints.length));\n\n    // Collect all values for each bucket from datapoints with similar target.\n    // TODO aggregate values into buckets over datapoint[TIME_INDEX] not over datapoint index (j).\n    for(let i = 0; i < cardsData.targets.length; i++) {\n      let target = cardsData.targets[i];\n\n      for (let j = 0; j < cardsData.xBucketSize; j++) {\n        let card = new Card();\n        card.id = i*cardsData.xBucketSize + j;\n        card.values = [];\n        card.columns = [];\n        card.multipleValues = false;\n        card.noColorDefined = false;\n        card.y = target;\n        card.x = -1;\n\n        // collect values from all timeseries with target\n        for (let si = 0; si < cardsData.targetIndex[target].length; si++) {\n          let s = data[cardsData.targetIndex[target][si]];\n          if (s.datapoints.length <= j) {\n            continue;\n          }\n          let datapoint = s.datapoints[j];\n          if (card.values.length === 0) {\n            card.x = datapoint[TIME_INDEX];\n          }\n          card.values.push(datapoint[VALUE_INDEX]);\n        }\n        card.minValue = _.min(card.values);\n        card.maxValue = _.max(card.values);\n        if (card.values.length > 1) {\n          cardsData.multipleValues = true;\n          card.multipleValues = true;\n          card.value = this.panel.seriesFilterIndex != -1 ? card.values[this.panel.seriesFilterIndex] : card.maxValue;\n        } else {\n          card.value = card.maxValue; // max value by default\n        }\n\n        if (cardsData.maxValue < card.maxValue)\n          cardsData.maxValue = card.maxValue;\n\n        if (cardsData.minValue > card.minValue)\n          cardsData.minValue = card.minValue;\n\n        if (card.x != -1) {\n        cardsData.cards.push(card);\n        }\n      }\n    }\n\n    return cardsData;\n  }\n}\n\nexport {\n  StatusHeatmapCtrl, StatusHeatmapCtrl as PanelCtrl\n};\n"],"file":"module.js"}
>>>>>>> master
